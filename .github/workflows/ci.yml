name: CI Pipeline with pip-compile

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    container:
      image: python:3.11-slim-bullseye  # Debian-based Python image

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install pip-tools and compile requirements
      - name: Install pip-tools and compile requirements
        run: |
          python -m pip install --upgrade pip pip-tools
          pip-compile requirements.in --output-file=requirements.txt
          cat requirements.txt  # Optional: Show the generated requirements

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Step 4: Run tests
      - name: Run tests
        run: |
          pytest --disable-warnings

      # Step 5: Linting (Optional)
      - name: Lint code with Flake8
        run: |
          pip install flake8
          flake8 .

      # Step 6: Cache dependencies (Optional for faster builds)
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.in') }}
          restore-keys: |
            ${{ runner.os }}-pip-
